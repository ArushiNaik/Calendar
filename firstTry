<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar</title>
    <style>
        * {box-sizing: border-box; margin: 0; padding: 0;}
        body {font-family: Verdana, sans-serif; text-align: center; padding: 20px;}

        .container {
            display: flex;
            justify-content: center;
            gap: 20px;
        }

        .month {
            padding: 20px;
            width: 100%;
            max-width: 400px;
            background: #1abc9c;
            text-align: center;
            border-radius: 10px;
            color: white;
            position: relative;
        }

        .prev, .next {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            font-size: 24px;
            color: white;
        }

        .prev {left: 20px;}
        .next {right: 20px;}

        .weekdays, .days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
            max-width: 400px;
            margin: auto;
        }

        .weekdays div, .days div {
            padding: 10px;
            border-radius: 5px;
            text-align: center;
        }

        .weekdays {background-color: #ddd; font-weight: bold;}
        .days {background: #eee; padding: 10px;}
        .days div {cursor: pointer; background: white; transition: 0.3s;}
        .days div:hover {background: #16a085; color: white; transform: scale(1.1);}
        .active {background: #1abc9c; color: red; border: 2px red solid;}

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            padding: 20px;
            border-radius: 10px;
            width: 300px;
            text-align: left;
        }

        .close {float: right; cursor: pointer; font-size: 20px;}
        .task-input {width: 100%; padding: 5px; margin: 5px 0;}
        .task-list {list-style: none; padding: 0;}
        .task-list li {display: flex; justify-content: space-between; padding: 5px; background: #f4f4f4; margin: 5px 0; border-radius: 5px;}
        .delete-btn {cursor: pointer; color: red; font-weight: bold;}
    </style>
</head>
<body>
    <h1>Calendar</h1>
    <div class="container">
        <div>
            <div class="month">
                <span class="prev" onclick="changeMonth(-1)">&#10094;</span>
                <ul><li id="month-year"></li></ul>
                <span class="next" onclick="changeMonth(1)">&#10095;</span>
            </div>
            <div class="weekdays">
                <div>Mon</div> 
                <div>Tue</div> 
                <div>Wed</div> 
                <div>Thu</div> 
                <div>Fri</div> 
                <div>Sat</div> 
                <div>Sun</div>
            </div>
            <div class="days" id="calendar-days"></div>
        </div>
        <div>
            <header><h1>Reminders</h1></header>
            <article>
                <p> <input type="text" id="inItemText"></p>
                 <ul id="todolist">	
                 </ul>
            </article>
        </div>
    </div>

    <div class="modal" id="task-modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h3 id="task-date"></h3>
            <input type="text" id="task-input" class="task-input" placeholder="Add a new task">
            <button onclick="addTask()">Add Task</button>
            <ul id="task-list" class="task-list"></ul>
        </div>
    </div>

    <script>
        let currentDate = new Date();
        let selectedDate;
        let tasks = JSON.parse(localStorage.getItem("tasks")) || {};
        function renderCalendar() {
            const daysContainer = document.getElementById("calendar-days");
            const monthYear = document.getElementById("month-year");
            let year = currentDate.getFullYear();
            let month = currentDate.getMonth();
            let firstDay = new Date(year, month, 1).getDay();
            let lastDate = new Date(year, month + 1, 0).getDate();
            let today = new Date();

            monthYear.innerHTML = ${currentDate.toLocaleString('default', { month: 'long' })} <br><span>${year}</span>;
            let daysHTML = "";
            let startDay = firstDay === 0 ? 6 : firstDay - 1;
            for (let i = 0; i < startDay; i++) daysHTML += <div></div>;
            for (let i = 1; i <= lastDate; i++) {
                let dateKey = ${year}-${month + 1}-${i};
                let hasTask = tasks[dateKey] && tasks[dateKey].length ? "ðŸ”´" : "";
                let isActive = (i === today.getDate() && month === today.getMonth() && year === today.getFullYear()) ? "active" : "";
                daysHTML += <div class="${isActive}" onclick="openModal('${dateKey}', ${i})">${i} ${hasTask}</div>;
            }
            daysContainer.innerHTML = daysHTML;
        }

        function changeMonth(step) {
            currentDate.setMonth(currentDate.getMonth() + step); 
            renderCalendar();}

        function openModal(dateKey, day) {
            selectedDate = dateKey; 
            document.getElementById("task-date").innerText = Tasks for ${day}; 
            loadTasks(); 
            document.getElementById("task-modal").style.display = "flex";}

        function closeModal() {
            document.getElementById("task-modal").style.display = "none";}

        function addTask() {
            let taskInput = document.getElementById("task-input");
            if (!taskInput.value.trim()) return;
            if (!tasks[selectedDate]) tasks[selectedDate] = [];
            tasks[selectedDate].push(taskInput.value.trim());
            localStorage.setItem("tasks", JSON.stringify(tasks));
            taskInput.value = "";
            loadTasks(); 
            renderCalendar();
        }
        function loadTasks() {
            let taskList = document.getElementById("task-list");
            taskList.innerHTML = tasks[selectedDate]?.map((task, index) => <li>${task} <span class="delete-btn" onclick="deleteTask(${index})">âœ–</span></li>).join("") || "";
        }
        function deleteTask(index) {
            tasks[selectedDate].splice(index, 1); 
            if (!tasks[selectedDate].length) delete tasks[selectedDate]; 
            localStorage.setItem("tasks", JSON.stringify(tasks)); 
            loadTasks(); renderCalendar();}

        renderCalendar();

        



    </script>
</body> in this code, how can i do to add the to do list to remainder?
also, make the calendar bigger and right to the side, add remainder section where all the task assigned would be listed in the remainder box till the due date. The css should be very cool and modern not boring


</html>
