<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar & Reminders</title>
    <style>
        * {box-sizing: border-box; margin: 0; padding: 0;}
        body {font-family: Arial, sans-serif; background: #f4f4f4; padding: 20px; display: flex; justify-content: center; align-items: center; height: 100vh;}

        .container {
            display: flex;
            gap: 30px;
            width: 90%;
            max-width: 1200px;
        }

        .calendar-container {
            flex: 2;
            background: #2c3e50;
            color: white;
            padding: 20px;
            border-radius: 10px;
        }

        .month {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 24px;
            margin-bottom: 20px;
        }

        .weekdays, .days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            text-align: center;
            gap: 5px;
        }

        .weekdays div {
            padding: 10px;
            font-weight: bold;
            background: #34495e;
        }

        .days div {
            padding: 15px;
            background: white;
            color: black;
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
        }
        .days div:hover { background: #16a085; color: white; transform: scale(1.1); }
        .active { background: #1abc9c; color: white; border: 2px solid red; }
        .task-indicator { color: red; font-size: 14px; }

        .reminders-container {
            flex: 1;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .task-list li { display: flex; justify-content: space-between; padding: 8px; background: #ecf0f1; margin: 5px 0; border-radius: 5px; }
        .delete-btn { cursor: pointer; color: red; }

        .modal {
            display: none;
            position: fixed;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            padding: 20px;
            border-radius: 10px;
            width: 300px;
            text-align: left;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="calendar-container">
            <div class="month">
                <span class="prev" onclick="changeMonth(-1)">&#10094;</span>
                <span id="month-year"></span>
                <span class="next" onclick="changeMonth(1)">&#10095;</span>
            </div>
            <div class="weekdays">
                <div>Mon</div> <div>Tue</div> <div>Wed</div> <div>Thu</div> <div>Fri</div> <div>Sat</div> <div>Sun</div>
            </div>
            <div class="days" id="calendar-days"></div>
        </div>
        <div class="reminders-container">
            <h2>Reminders</h2>
            <ul id="reminder-list"></ul>
        </div>
    </div>

    <div class="modal" id="task-modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h3 id="task-date"></h3>
            <input type="text" id="task-input" placeholder="Add a new task">
            <button onclick="addTask()">Add Task</button>
            <ul id="task-list"></ul>
        </div>
    </div>

    <script>
        let currentDate = new Date();
        let selectedDate;
        let tasks = JSON.parse(localStorage.getItem("tasks")) || {};

        function renderCalendar() {
            const daysContainer = document.getElementById("calendar-days");
            const monthYear = document.getElementById("month-year");
            let year = currentDate.getFullYear();
            let month = currentDate.getMonth();
            let firstDay = new Date(year, month, 1).getDay();
            let lastDate = new Date(year, month + 1, 0).getDate();
            let today = new Date();
            
            monthYear.innerHTML = `${currentDate.toLocaleString('default', { month: 'long' })} ${year}`;
            let daysHTML = "";
            let startDay = firstDay === 0 ? 6 : firstDay - 1;
            for (let i = 0; i < startDay; i++) daysHTML += `<div></div>`;
            for (let i = 1; i <= lastDate; i++) {
                let dateKey = `${year}-${month + 1}-${i}`;
                let hasTask = tasks[dateKey]?.length ? "ðŸ”´" : "";
                let isActive = (i === today.getDate() && month === today.getMonth() && year === today.getFullYear()) ? "active" : "";
                daysHTML += `<div class="${isActive}" onclick="openModal('${dateKey}', ${i})">${i} ${hasTask}</div>`;
            }
            daysContainer.innerHTML = daysHTML;
            renderReminders();
        }

        function changeMonth(step) { currentDate.setMonth(currentDate.getMonth() + step); renderCalendar(); }

        function openModal(dateKey, day) {
            selectedDate = dateKey;
            document.getElementById("task-date").innerText = `Tasks for ${day}`;
            loadTasks();
            document.getElementById("task-modal").style.display = "flex";
        }

        function closeModal() { document.getElementById("task-modal").style.display = "none"; }

        function addTask() {
            let taskInput = document.getElementById("task-input");
            if (!taskInput.value.trim()) return;
            if (!tasks[selectedDate]) tasks[selectedDate] = [];
            tasks[selectedDate].push(taskInput.value.trim());
            localStorage.setItem("tasks", JSON.stringify(tasks));
            taskInput.value = "";
            loadTasks();
            renderCalendar();
        }

        function renderReminders() {
            let reminderList = document.getElementById("reminder-list");
            reminderList.innerHTML = Object.entries(tasks).flatMap(([date, taskArr]) => taskArr.map(task => `<li>${date}: ${task}</li>`)).join('');
        }

        renderCalendar();
    </script>
</body>
</html>
