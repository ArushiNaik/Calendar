<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar</title>
    <style>
        * {box-sizing: border-box; margin: 0; padding: 0;}
        body {font-family: 'Arial', sans-serif; background: #f4f7fb; padding: 20px;}

        .container {
            display: flex;
            justify-content: space-between;
            gap: 30px;
        }

        .calendar {
            width: 65%;
            background: #1abc9c;
            padding: 20px;
            border-radius: 10px;
            position: relative;
        }

        .reminder-box {
            width: 30%;
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .month {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 24px;
            color: white;
        }

        .prev, .next {
            font-size: 28px;
            cursor: pointer;
            color: white;
        }

        .weekdays, .days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
            margin-top: 10px;
        }

        .weekdays div, .days div {
            padding: 15px;
            text-align: center;
            border-radius: 5px;
            font-size: 18px;
            cursor: pointer;
        }

        .weekdays {background-color: #ddd; font-weight: bold; color: #555;}
        .days {background: #f9f9f9;}

        .days div:hover {
            background: #16a085;
            color: white;
            transform: scale(1.1);
            transition: transform 0.2s;
        }

        .active {background: #1abc9c; color: white; font-weight: bold;}

        .reminder-header {
            font-size: 24px;
            font-weight: bold;
            color: #333;
            margin-bottom: 20px;
        }

        .reminder-task {
            background: #f4f4f4;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            cursor: pointer;
        }

        .reminder-task:hover {
            background: #e0e0e0;
        }

        .delete-btn {
            color: red;
            font-weight: bold;
            cursor: pointer;
        }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            padding: 20px;
            border-radius: 10px;
            width: 300px;
        }

        .close {
            float: right;
            cursor: pointer;
            font-size: 20px;
        }

        .task-input {width: 100%; padding: 10px; margin: 10px 0; border-radius: 5px; border: 1px solid #ccc;}
        button {
            padding: 10px;
            background: #1abc9c;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {background: #16a085;}
    </style>
</head>
<body>
    <h1 style="text-align: center;">Calendar and Reminders</h1>
    <div class="container">
        <div class="calendar">
            <div class="month">
                <span class="prev" onclick="changeMonth(-1)">&#10094;</span>
                <span id="month-year"></span>
                <span class="next" onclick="changeMonth(1)">&#10095;</span>
            </div>
            <div class="weekdays">
                <div>Mon</div> 
                <div>Tue</div> 
                <div>Wed</div> 
                <div>Thu</div> 
                <div>Fri</div> 
                <div>Sat</div> 
                <div>Sun</div>
            </div>
            <div class="days" id="calendar-days"></div>
        </div>

        <div class="reminder-box">
            <div class="reminder-header">Your Reminders</div>
            <ul id="reminder-list"></ul>
        </div>
    </div>

    <div class="modal" id="task-modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h3 id="task-date"></h3>
            <input type="text" id="task-input" class="task-input" placeholder="Add a new task">
            <button onclick="addTask()">Add Task</button>
        </div>
    </div>

    <script>
        let currentDate = new Date();
        let selectedDate;
        let tasks = JSON.parse(localStorage.getItem("tasks")) || {};

        function renderCalendar() {
            const daysContainer = document.getElementById("calendar-days");
            const monthYear = document.getElementById("month-year");
            let year = currentDate.getFullYear();
            let month = currentDate.getMonth();
            let firstDay = new Date(year, month, 1).getDay();
            let lastDate = new Date(year, month + 1, 0).getDate();
            let today = new Date();

            monthYear.innerHTML = `${currentDate.toLocaleString('default', { month: 'long' })} <br><span>${year}</span>`;
            let daysHTML = "";
            let startDay = firstDay === 0 ? 6 : firstDay - 1;
            for (let i = 0; i < startDay; i++) daysHTML += `<div></div>`;
            for (let i = 1; i <= lastDate; i++) {
                let dateKey = `${year}-${month + 1}-${i}`;
                let hasTask = tasks[dateKey] && tasks[dateKey].length ? "ðŸ”´" : "";
                let isActive = (i === today.getDate() && month === today.getMonth() && year === today.getFullYear()) ? "active" : "";
                daysHTML += `<div class="${isActive}" onclick="openModal('${dateKey}', ${i})">${i} ${hasTask}</div>`;
            }
            daysContainer.innerHTML = daysHTML;
        }

        function changeMonth(step) {
            currentDate.setMonth(currentDate.getMonth() + step); 
            renderCalendar();
        }

        function openModal(dateKey, day) {
            selectedDate = dateKey;
            document.getElementById("task-date").innerText = `Tasks for ${day}`;
            loadTasks();
            document.getElementById("task-modal").style.display = "flex";
        }

        function closeModal() {
            document.getElementById("task-modal").style.display = "none";
        }

        function addTask() {
            let taskInput = document.getElementById("task-input");
            if (!taskInput.value.trim()) return;
            if (!tasks[selectedDate]) tasks[selectedDate] = [];
            tasks[selectedDate].push(taskInput.value.trim());
            localStorage.setItem("tasks", JSON.stringify(tasks));
            taskInput.value = "";
            loadTasks();
            renderCalendar();
            updateReminderSection();
        }

        function loadTasks() {
            let taskList = document.getElementById("task-list");
            taskList.innerHTML = tasks[selectedDate]?.map((task, index) => 
                `<li>${task} <span class="delete-btn" onclick="deleteTask(${index})">âœ–</span></li>`
            ).join("") || "";
        }

        function deleteTask(index) {
            tasks[selectedDate].splice(index, 1);
            if (!tasks[selectedDate].length) delete tasks[selectedDate];
            localStorage.setItem("tasks", JSON.stringify(tasks));
            loadTasks();
            renderCalendar();
            updateReminderSection();
        }

        function updateReminderSection() {
            const reminderList = document.getElementById("reminder-list");
            reminderList.innerHTML = "";
            Object.keys(tasks).forEach(dateKey => {
                tasks[dateKey].forEach(task => {
                    let reminderItem = document.createElement("li");
                    reminderItem.classList.add("reminder-task");
                    reminderItem.innerHTML = `<span>${task}</span><span class="delete-btn" onclick="deleteReminder('${dateKey}', '${task}')">âœ–</span>`;
                    reminderList.appendChild(reminderItem);
                });
            });
        }

        function deleteReminder(dateKey, task) {
            let taskIndex = tasks[dateKey].indexOf(task);
            if (taskIndex !== -1) {
                tasks[dateKey].splice(taskIndex, 1);
                if (!tasks[dateKey].length) delete tasks[dateKey];
                localStorage.setItem("tasks", JSON.stringify(tasks));
                updateReminderSection();
                renderCalendar();
            }
        }

        renderCalendar();
        updateReminderSection();
    </script>
</body>
</html>
